"use strict";function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _get=function(t,e,a){for(var r=!0;r;){var n=t,i=e,s=a;o=l=c=void 0,r=!1,null===n&&(n=Function.prototype);var o=Object.getOwnPropertyDescriptor(n,i);if(void 0!==o){if("value"in o)return o.value;var c=o.get;return void 0===c?void 0:c.call(s)}var l=Object.getPrototypeOf(n);if(null===l)return void 0;t=l,e=i,a=s,r=!0}},_createClass=function(){function t(t,e){for(var a=0;a<e.length;a++){var r=e[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,a,r){return a&&t(e.prototype,a),r&&t(e,r),e}}(),Map=function(){function t(e){_classCallCheck(this,t),this.WIDTH=e.width,this.HEIGHT=.4*e.width,this.scale=this.WIDTH/1e3,this.canvas=document.createElement("canvas"),e.container.appendChild(this.canvas),this.canvas.width=this.WIDTH,this.canvas.height=this.HEIGHT,this.ctx=this.canvas.getContext("2d"),this.ctx.drawSvg("world.svg",0,0,this.WIDTH,this.HEIGHT),this.mapDate=this.ctx.getImageData(0,0,this.WIDTH,this.HEIGHT),this.container={},this.count=0}return _createClass(t,[{key:"trigger",value:function(t,e){t=this.getXY(t),e=this.getXY(e);var a=+new Date,r="#21b384",n="#e32528";if(!this.container[a]){var i={start:t,end:e,startColor:r,endColor:n,duration:1e3,radius:70+parseInt(20*Math.random()),stage:0};this.container[a]=i,this.count++||this.draw()}}},{key:"clear",value:function(){this.ctx.clearRect(0,0,this.WIDTH,this.HEIGHT),this.ctx.putImageData(this.mapDate,0,0)}},{key:"draw",value:function(){var t=+new Date;this.clear();var e=!0,a=!1,r=void 0;try{for(var n,i=Object.keys(this.container)[Symbol.iterator]();!(e=(n=i.next()).done);e=!0){var s=n.value,o=t-s,c=this.container[s];if(o<c.duration){var l=this.easeOutQuint(o,0,c.radius,c.duration),u=this.easeOutQuint(o>c.duration/2?o-c.duration/2:o,c.start.x,c.end.x-c.start.x,c.duration/2),h=this.easeOutQuint(o>c.duration/2?o-c.duration/2:o,c.start.y,c.end.y-c.start.y,c.duration/2),d=this.easeOutQuint(o,1,-1,c.duration);this.ctx.globalAlpha=d,this.ctx.strokeStyle=c.startColor,this.ctx.lineWidth=5,this.ctx.beginPath(),this.ctx.arc(c.start.x,c.start.y,l,0,2*Math.PI),this.ctx.stroke(),this.ctx.globalAlpha=.5,this.ctx.strokeStyle=c.endColor,this.ctx.beginPath(),o<c.duration/2?this.ctx.moveTo(c.start.x,c.start.y):this.ctx.moveTo(c.end.x,c.end.y),this.ctx.lineTo(u,h),this.ctx.stroke()}else if(o<2*c.duration){var l=this.easeOutQuint(o-c.duration,0,c.radius,c.duration),u=this.easeOutQuint(o-c.duration,c.start.x,c.end.x-c.start.x,c.duration),h=this.easeOutQuint(o-c.duration,c.start.y,c.end.y-c.start.y,c.duration),d=this.easeOutQuint(o-c.duration,1,-1,c.duration);this.ctx.globalAlpha=d,this.ctx.strokeStyle=c.endColor,this.ctx.lineWidth=5,this.ctx.beginPath(),this.ctx.arc(c.end.x,c.end.y,l,0,2*Math.PI),this.ctx.stroke()}else delete this.container[s],this.count--}}catch(m){a=!0,r=m}finally{try{!e&&i["return"]&&i["return"]()}finally{if(a)throw r}}this.count&&window.requestAnimationFrame(this.draw.bind(this))}},{key:"getXY",value:function(t){return{x:(2.6938*t.lon+465.4)*this.scale,y:(-2.6938*t.lat+227.066)*this.scale}}},{key:"easeOutQuint",value:function(t,e,a,r){return a*Math.sin(t/r*(Math.PI/2))+e}}]),t}(),AttackList=function(t){function e(){_classCallCheck(this,e),_get(Object.getPrototypeOf(e.prototype),"constructor",this).apply(this,arguments)}return _inherits(e,t),_createClass(e,[{key:"render",value:function(){var t=[],e=!0,a=!1,r=void 0;try{for(var n,i=Object.keys(this.props.list)[Symbol.iterator]();!(e=(n=i.next()).done);e=!0){var s=n.value;t.push({country:s,count:this.props.list[s]})}}catch(o){a=!0,r=o}finally{try{!e&&i["return"]&&i["return"]()}finally{if(a)throw r}}return React.createElement("table",{className:this.props.className},React.createElement("tr",null,React.createElement("th",null,"attackorigin"==this.props.className?"Origin":"Targets"),React.createElement("th",null,"Count")),t.sort(function(t,e){return e.count-t.count}).slice(0,9).map(function(t){return React.createElement("tr",null,React.createElement("td",null,t.country),React.createElement("td",null,t.count))}))}}]),e}(React.Component),RealTimeList=function(t){function e(){_classCallCheck(this,e),_get(Object.getPrototypeOf(e.prototype),"constructor",this).apply(this,arguments)}return _inherits(e,t),_createClass(e,[{key:"render",value:function(){return React.createElement("table",{className:this.props.className},React.createElement("tr",null,React.createElement("th",null,"Time"),React.createElement("th",null,"Origin"),React.createElement("th",null,"Targets"),React.createElement("th",null,"Type")),this.props.realtime.map(function(t){return React.createElement("tr",null,React.createElement("td",{width:"200"},t.Time),React.createElement("td",null,t.Origin),React.createElement("td",{width:"200"},t.Targets),React.createElement("td",null,t.Type))}))}}]),e}(React.Component),Info=function(t){function e(){_classCallCheck(this,e),_get(Object.getPrototypeOf(e.prototype),"constructor",this).apply(this,arguments)}return _inherits(e,t),_createClass(e,[{key:"render",value:function(){return React.createElement("div",{className:"info"},React.createElement(AttackList,{list:this.props.origin,className:"attackorigin"}),React.createElement(AttackList,{list:this.props.targets,className:"attacktargets"}),React.createElement(RealTimeList,{realtime:this.props.realtime,className:"realtime"}))}}]),e}(React.Component),map=new Map({container:document.querySelector(".map"),width:screen.width,worldmap:worldmap}),list=document.querySelector(".list"),origin={},targets={},realtime=[],ws=new WebSocket("ws://mbsd.ipviking.com:443");ws.onmessage=function(t){var e=JSON.parse(t.data),a={lat:+e.latitude,lon:+e.longitude},r={lat:+e.latitude2,lon:+e.longitude2},n=worldmap.name[e.countrycode]||"Unknow";origin[n]?origin[n]++:origin[n]=1;var i=worldmap.name[e.countrycode2]||"Unknow";targets[i]?targets[i]++:targets[i]=1,realtime.push({Time:(new Date).toLocaleString(),Origin:n,Targets:i,Type:services[e.dport]||"Unknow"}),realtime.length>8&&realtime.shift(),React.render(React.createElement(Info,{className:"info",origin:origin,targets:targets,realtime:realtime}),list),map.trigger(a,r)};
//# sourceMappingURL=data:application/json;base64,